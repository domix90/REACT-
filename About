A component is a piece of UI that you can reuse. 
Just like you're able to reuse code in JavaScript with functions, a component lets you reuse code that renders a part of your UI.


Creating a component in React is a 2 step process: 

1st. - Define the component as a function or a class 
2nd. - Display the component in the UI with a JSX tag

Simple static component can look like this: 

function Header() {

  return (

  <header>
    <h1> Scoreboard </h1>
    <span className="stats"> Players: 1 </span>
  </header> 
);
}

ReactDOM.render(
  <Header />
  document.getElementById('root')

);

While it isnâ€™t required, the React docs recommend wrapping multiple 
lines of JSX in parentheses to avoid the pitfalls of automatic semicolon insertion.

Why use parenthesis on JavaScript return statements?
http://jamesknelson.com/javascript-return-parenthesis/


In React I can create my own tags thanks to JSX. A JSX tag can not only represent an HTML element (like <h1>, <span>, and <header>), 
it can also represent a user-defined component, so for instance in the above example, I used self-closing tag "<Header />" 
to refer to "function Header()". I can now refer to this component anywhere in my app to render this element on the page. 


