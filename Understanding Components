function Header() {

  return (

  <header>
    <h1>Scoreboard</h1>
    <span className="stats">Players: 1 </span>
  </header> 
);
}

const Player = () => {
  return (
    <div className="player">
      <span className="player-name">
        Dominik 
      </span>
    </div>
  );
}
    
const Counter = () => {
  
  return (
    
      <div className="counter">
        <button className="counter-action decrement"> - </button>
        <span className="counter-score"> 20 </span> 
        <button className="counter-action increment"> + </button>
      </div>
    
  );

}

ReactDOM.render(
  <Header />,
  document.getElementById('root')

);


When a component contains another component, it's called composition. Composing components is a core principle in React. Parent usually have components with one or many child components. 
This gives the parent component the ability to control how its child components are rendered.

With React, I never touch the actual DOM directly. 
React only manages what gets rendered into the DOM, so it can be tricky to debug your UI in the browser

For help with debugging the app USE : 

https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi/related?hl=en
