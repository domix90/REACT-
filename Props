Every React component and element can receive a list of attributes called properties (or props). 
Props are a core concept in React because it's how you get data into a component.

In React, we use properties, or props, to customize our components and pass dynamic information into them. Every React element and
component has a props object containing the list of props given to it.

Every React component and element can receive a list of attributes just like HTML elements.





function Header((*2*)props(*2*)) {

  return (

  <header>
    <h1>(*3*){props.title}(*3*)</h1>
    <span className="stats"> Players: (*3*){props.playersNumber}(*3*)</span>
  </header> 
);
}


const App = () => {
  return (
  
    <div className="scoreboard">
      <Header (*1*)title="My Scoreboard" playersNumber={1} (*1*) />
      
      {/* Players List */}
      
      <Player /> 
    </div>
  );
}

1. In the first step I pass attributes to PROPS OBJECT for the Header element. 
You write props in a component's JSX tag, using an attribute syntax.


2. Next, I update Header function to use these props by giving our function a parameter called props.

When we define a component using a function,
the function gets one default argument from React,
a props object containing a list of props given to the component.

3. After that I need to access the properties of the props object by using {} and . notation. 
So I call the name of the parameter and then the name of the property from the object. 
